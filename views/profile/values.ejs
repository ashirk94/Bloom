<div class="main-wrapper">
	<h2 class="title">Select & Rank Your Values</h2>
	<p class="subtitle">Choose up to 5 values and rank them in order of importance (1 = most important)</p>
	<% if (locals.successMessage) { %>
		<div class="success-msg">‚úÖ <%= locals.successMessage %></div>
	<% } %>
	<% if (locals.errorMessage) { %>
		<div class="error-msg">‚ùå <%= locals.errorMessage %></div>
	<% } %>
	
	<form method="post" id="values-form">
		<div class="values-grid">
			<label class="value-item" data-value="Family">
				<input type="checkbox" name="values" value="Family">
				<span class="item-content">üë™ Family</span>
				<select class="rank-select" disabled>
					<option value="">Rank</option>
					<option value="1">1</option>
					<option value="2">2</option>
					<option value="3">3</option>
					<option value="4">4</option>
					<option value="5">5</option>
				</select>
			</label>
			<label class="value-item" data-value="Ambition">
				<input type="checkbox" name="values" value="Ambition">
				<span class="item-content">üöÄ Ambition</span>
				<select class="rank-select" disabled>
					<option value="">Rank</option>
					<option value="1">1</option>
					<option value="2">2</option>
					<option value="3">3</option>
					<option value="4">4</option>
					<option value="5">5</option>
				</select>
			</label>
			<label class="value-item" data-value="Compassion">
				<input type="checkbox" name="values" value="Compassion">
				<span class="item-content">‚ù§Ô∏è Compassion</span>
				<select class="rank-select" disabled>
					<option value="">Rank</option>
					<option value="1">1</option>
					<option value="2">2</option>
					<option value="3">3</option>
					<option value="4">4</option>
					<option value="5">5</option>
				</select>
			</label>
			<label class="value-item" data-value="Honesty">
				<input type="checkbox" name="values" value="Honesty">
				<span class="item-content">‚úã Honesty</span>
				<select class="rank-select" disabled>
					<option value="">Rank</option>
					<option value="1">1</option>
					<option value="2">2</option>
					<option value="3">3</option>
					<option value="4">4</option>
					<option value="5">5</option>
				</select>
			</label>
			<label class="value-item" data-value="Faith">
				<input type="checkbox" name="values" value="Faith">
				<span class="item-content">üôè Faith</span>
				<select class="rank-select" disabled>
					<option value="">Rank</option>
					<option value="1">1</option>
					<option value="2">2</option>
					<option value="3">3</option>
					<option value="4">4</option>
					<option value="5">5</option>
				</select>
			</label>
			<label class="value-item" data-value="Adventure">
				<input type="checkbox" name="values" value="Adventure">
				<span class="item-content">üó∫Ô∏è Adventure</span>
				<select class="rank-select" disabled>
					<option value="">Rank</option>
					<option value="1">1</option>
					<option value="2">2</option>
					<option value="3">3</option>
					<option value="4">4</option>
					<option value="5">5</option>
				</select>
			</label>
			<label class="value-item" data-value="Creativity">
				<input type="checkbox" name="values" value="Creativity">
				<span class="item-content">üé® Creativity</span>
				<select class="rank-select" disabled>
					<option value="">Rank</option>
					<option value="1">1</option>
					<option value="2">2</option>
					<option value="3">3</option>
					<option value="4">4</option>
					<option value="5">5</option>
				</select>
			</label>
			<label class="value-item" data-value="Growth">
				<input type="checkbox" name="values" value="Growth">
				<span class="item-content">üìà Growth</span>
				<select class="rank-select" disabled>
					<option value="">Rank</option>
					<option value="1">1</option>
					<option value="2">2</option>
					<option value="3">3</option>
					<option value="4">4</option>
					<option value="5">5</option>
				</select>
			</label>
		</div>
		
		<!-- Hidden inputs for ranked values -->
		<input type="hidden" name="value1" id="value1" />
		<input type="hidden" name="value2" id="value2" />
		<input type="hidden" name="value3" id="value3" />
		<input type="hidden" name="value4" id="value4" />
		<input type="hidden" name="value5" id="value5" />
		
		<div class="btn-group">
			<input class="btn btn-primary" type="submit" value="Save Values" />
			<a href="/profile" class="btn btn-secondary">Back to Profile</a>
		</div>
	</form>
</div>

<style>
.values-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 15px;
    margin: 20px 0;
}

.value-item {
    display: flex;
    align-items: center;
    padding: 12px 15px;
    border: 2px solid #e9ecef;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s ease;
    background: white;
    gap: 12px;
}

.value-item:hover {
    border-color: #007bff;
    background-color: #f8f9fa;
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

.value-item.selected {
    border-color: #007bff;
    background-color: #e7f3ff;
}

.value-item input[type="checkbox"] {
    margin: 0;
    transform: scale(1.2);
}

.item-content {
    flex: 1;
    font-size: 16px;
    font-weight: 500;
}

.rank-select {
    padding: 4px 8px;
    border: 1px solid #ced4da;
    border-radius: 4px;
    font-size: 14px;
    min-width: 70px;
    background: white;
}

.rank-select:disabled {
    background: #f8f9fa;
    color: #6c757d;
}

.rank-select:enabled {
    border-color: #007bff;
    background: #fff;
}

.subtitle {
    color: #6c757d;
    font-size: 16px;
    margin-bottom: 20px;
}

@media (max-width: 768px) {
    .values-grid {
        grid-template-columns: 1fr;
    }
    
    .value-item {
        padding: 10px 12px;
    }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('values-form');
    const valueItems = document.querySelectorAll('.value-item');
    const hiddenInputs = {
        1: document.getElementById('value1'),
        2: document.getElementById('value2'),
        3: document.getElementById('value3'),
        4: document.getElementById('value4'),
        5: document.getElementById('value5')
    };

    // Handle checkbox changes
    valueItems.forEach(item => {
        const checkbox = item.querySelector('input[type="checkbox"]');
        const rankSelect = item.querySelector('.rank-select');
        
        checkbox.addEventListener('change', function() {
            if (this.checked) {
                // Check if we already have 5 selected
                const selectedCount = document.querySelectorAll('input[name="values"]:checked').length;
                if (selectedCount > 5) {
                    this.checked = false;
                    alert('You can select maximum 5 values');
                    return;
                }
                
                item.classList.add('selected');
                rankSelect.disabled = false;
                
                // Auto-assign next available rank
                const usedRanks = Array.from(document.querySelectorAll('.rank-select:enabled'))
                    .map(select => select.value)
                    .filter(value => value !== '');
                
                for (let i = 1; i <= 5; i++) {
                    if (!usedRanks.includes(i.toString())) {
                        rankSelect.value = i.toString();
                        break;
                    }
                }
            } else {
                item.classList.remove('selected');
                rankSelect.disabled = true;
                rankSelect.value = '';
            }
            updateHiddenInputs();
        });

        // Handle rank changes
        rankSelect.addEventListener('change', function() {
            updateHiddenInputs();
        });
    });

    function updateHiddenInputs() {
        // Clear all hidden inputs
        Object.values(hiddenInputs).forEach(input => input.value = '');
        
        // Get all selected items with ranks
        const rankedItems = Array.from(document.querySelectorAll('.value-item.selected'))
            .map(item => ({
                value: item.getAttribute('data-value'),
                rank: parseInt(item.querySelector('.rank-select').value) || 999
            }))
            .filter(item => item.rank !== 999)
            .sort((a, b) => a.rank - b.rank);

        // Update hidden inputs based on ranks
        rankedItems.forEach((item) => {
            if (hiddenInputs[item.rank]) {
                hiddenInputs[item.rank].value = item.value;
            }
        });
    }

    // Form validation
    form.addEventListener('submit', function(e) {
        const selectedCount = document.querySelectorAll('input[name="values"]:checked').length;
        const rankedCount = Object.values(hiddenInputs).filter(input => input.value !== '').length;
        
        if (selectedCount === 0) {
            e.preventDefault();
            alert('Please select at least one value');
            return;
        }
        
        if (selectedCount !== rankedCount) {
            e.preventDefault();
            alert('Please assign ranks to all selected values');
            return;
        }
    });
});
</script>
