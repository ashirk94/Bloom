<div class="main-wrapper">
    <h1 class="title">My Profile</h1>
    <h2 class="subtitle">Email: <%= locals.user.username %></h2>
    
    <!-- Display Name Section -->
    <div class="profile-section">
        <h3>üè∑Ô∏è Display Name</h3>
        <form method="post" action="/display-name" class="inline-form">
            <input type="text" name="displayName" value="<%= locals.user.displayName || '' %>" placeholder="Enter your first name" class="form-input" required>
            <button type="submit" class="btn btn-primary btn-small">Update</button>
        </form>
    </div>

    <!-- Profile Picture Section -->
    <div class="profile-section">
        <h3>üì∏ Profile Picture</h3>
        <form method="post" enctype="multipart/form-data" autocomplete="off">
            <input type="hidden" name="lat" id="lat">
            <input type="hidden" name="lon" id="lon">
            <input type="file" name="image" id="fileInput" accept="image/*" class="file-input"><br/>
            <div id="fileDisplayArea"></div><br>
            <input class="btn btn-primary btn-small hidden" type="submit" value="Update Picture" id="upload-pic">
        </form>
    </div>

    <!-- Location Section -->
    <div class="profile-section">
        <h3>üìç Location</h3>
        <% 
        const hasLocation = (locals.user.location && 
                           ((locals.user.location.coordinates && locals.user.location.coordinates.length === 2) || 
                            (locals.user.location.lat && locals.user.location.lon && locals.user.location.lat !== 0 && locals.user.location.lon !== 0)));
        %>
        <% if (hasLocation) { %>
            <p class="location-set">‚úÖ Location set - Ready to find friends nearby!</p>
        <% } else { %>
            <p class="location-needed">‚ö†Ô∏è Location needed to find friends in your area</p>
        <% } %>
        <button class="btn btn-primary btn-small" id="update-location-btn">Update Location</button>
    </div>

    <div class="btn-group">
        <a href="/interests" class="btn btn-secondary">Edit Interests</a>
        <a href="/values" class="btn btn-secondary">Edit Values</a>
        <a href="/bio" class="btn btn-secondary">Edit Bio</a>
    </div>
    <%- include('../partials/flash-messages') %>
    
    <!-- Add spacing at bottom -->
    <div class="bottom-spacing"></div>
</div>

<style>
.location-status {
    background: #f8f9fa;
    border: 1px solid #dee2e6;
    border-radius: 8px;
    padding: 15px;
    margin-bottom: 20px;
}

.location-set {
    color: #28a745;
    margin: 0 0 10px 0;
}

.location-needed {
    color: #dc3545;
    margin: 0 0 10px 0;
}

#update-location-btn {
    margin-top: 10px;
}
</style>

<script src="/profilePic.js" defer></script>
<script src="/location.js" defer></script>

<script>
document.getElementById('update-location-btn').addEventListener('click', function() {
    const button = this;
    button.textContent = 'Getting location...';
    button.disabled = true;
    
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(
            async function(position) {
                const lat = position.coords.latitude;
                const lon = position.coords.longitude;
                
                try {
                    const response = await fetch('/update-location', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ lat, lon })
                    });
                    
                    if (response.ok) {
                        button.textContent = '‚úÖ Location Updated!';
                        setTimeout(() => {
                            location.reload();
                        }, 1000);
                    } else {
                        throw new Error('Failed to update location');
                    }
                } catch (error) {
                    console.error('Error updating location:', error);
                    button.textContent = 'Error - Try Again';
                    button.disabled = false;
                }
            },
            function(error) {
                console.error('Geolocation error:', error);
                button.textContent = 'Location Access Denied';
                button.disabled = false;
                alert('Please enable location access in your browser to find friends nearby.');
            }
        );
    } else {
        alert('Geolocation is not supported by this browser.');
        button.disabled = false;
    }
});
</script>

<style>
.profile-section {
    background: #f8f9fa;
    border: 1px solid #dee2e6;
    border-radius: 8px;
    padding: 15px;
    margin-bottom: 20px;
}

.profile-section h3 {
    margin: 0 0 15px 0;
    color: #495057;
    font-size: 18px;
}

.inline-form {
    display: flex;
    gap: 10px;
    align-items: center;
}

.inline-form .form-input {
    flex: 1;
    padding: 8px 12px;
    border: 1px solid #ced4da;
    border-radius: 4px;
    font-size: 14px;
}

.file-input {
    padding: 10px;
    border: 2px dashed #dee2e6;
    border-radius: 8px;
    width: calc(100% - 20px);
    cursor: pointer;
    background: #f8f9fa;
    margin: 0 auto;
    display: block;
}

.file-input:hover {
    border-color: #007bff;
    background: #e7f3ff;
}

.btn-small {
    padding: 8px 16px;
    font-size: 14px;
}

.location-set {
    color: #28a745;
    margin: 0 0 10px 0;
}

.location-needed {
    color: #dc3545;
    margin: 0 0 10px 0;
}

.bottom-spacing {
    height: 100px;
    margin-bottom: 50px;
}
</style>

